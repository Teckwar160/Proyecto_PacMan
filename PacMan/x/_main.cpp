#include "../Estructuras/Grafo/Grafo.hpp"

int main()
{	
#if 1

	Graph *g = new Graph();

	g -> add_vertex(new Vertex("40"));
	g -> add_vertex(new Vertex("41"));
	g -> add_vertex(new Vertex("42"));
	g -> add_vertex(new Vertex("43"));
	g -> add_vertex(new Vertex("44"));
	g -> add_vertex(new Vertex("45"));
	g -> add_vertex(new Vertex("46"));
	g -> add_vertex(new Vertex("48"));
	g -> add_vertex(new Vertex("49"));
	g -> add_vertex(new Vertex("50"));
	g -> add_vertex(new Vertex("51"));
	g -> add_vertex(new Vertex("52"));
	g -> add_vertex(new Vertex("53"));
	g -> add_vertex(new Vertex("54"));
	g -> add_vertex(new Vertex("59"));
	g -> add_vertex(new Vertex("62"));
	g -> add_vertex(new Vertex("65"));
	g -> add_vertex(new Vertex("67"));
	g -> add_vertex(new Vertex("70"));
	g -> add_vertex(new Vertex("73"));
	g -> add_vertex(new Vertex("78"));
	g -> add_vertex(new Vertex("79"));
	g -> add_vertex(new Vertex("80"));
	g -> add_vertex(new Vertex("81"));
	g -> add_vertex(new Vertex("82"));
	g -> add_vertex(new Vertex("83"));
	g -> add_vertex(new Vertex("84"));
	g -> add_vertex(new Vertex("85"));
	g -> add_vertex(new Vertex("86"));
	g -> add_vertex(new Vertex("87"));
	g -> add_vertex(new Vertex("88"));
	g -> add_vertex(new Vertex("89"));
	g -> add_vertex(new Vertex("90"));
	g -> add_vertex(new Vertex("91"));
	g -> add_vertex(new Vertex("92"));
	g -> add_vertex(new Vertex("97"));
	g -> add_vertex(new Vertex("100"));
	g -> add_vertex(new Vertex("102"));
	g -> add_vertex(new Vertex("106"));
	g -> add_vertex(new Vertex("108"));
	g -> add_vertex(new Vertex("111"));
	g -> add_vertex(new Vertex("116"));
	g -> add_vertex(new Vertex("117"));
	g -> add_vertex(new Vertex("118"));
	g -> add_vertex(new Vertex("119"));
	g -> add_vertex(new Vertex("121"));
	g -> add_vertex(new Vertex("122"));
	g -> add_vertex(new Vertex("124"));
	g -> add_vertex(new Vertex("127"));
	g -> add_vertex(new Vertex("128"));
	g -> add_vertex(new Vertex("129"));
	g -> add_vertex(new Vertex("138"));
	g -> add_vertex(new Vertex("141"));
	g -> add_vertex(new Vertex("142"));
	g -> add_vertex(new Vertex("143"));
	g -> add_vertex(new Vertex("146"));
	g -> add_vertex(new Vertex("157"));
	g -> add_vertex(new Vertex("159"));
	g -> add_vertex(new Vertex("160"));
	g -> add_vertex(new Vertex("161"));
	g -> add_vertex(new Vertex("162"));
	g -> add_vertex(new Vertex("163"));
	g -> add_vertex(new Vertex("165"));
	g -> add_vertex(new Vertex("176"));
	g -> add_vertex(new Vertex("178"));
	g -> add_vertex(new Vertex("180"));
	g -> add_vertex(new Vertex("182"));
	g -> add_vertex(new Vertex("184"));
	g -> add_vertex(new Vertex("195"));
	g -> add_vertex(new Vertex("196"));
	g -> add_vertex(new Vertex("197"));
	g -> add_vertex(new Vertex("201"));
	g -> add_vertex(new Vertex("202"));
	g -> add_vertex(new Vertex("203"));
	g -> add_vertex(new Vertex("211"));
	g -> add_vertex(new Vertex("212"));
	g -> add_vertex(new Vertex("213"));
	g -> add_vertex(new Vertex("214"));
	g -> add_vertex(new Vertex("215"));
	g -> add_vertex(new Vertex("216"));
	g -> add_vertex(new Vertex("220"));
	g -> add_vertex(new Vertex("221"));
	g -> add_vertex(new Vertex("222"));
	g -> add_vertex(new Vertex("223"));
	g -> add_vertex(new Vertex("224"));
	g -> add_vertex(new Vertex("233"));
	g -> add_vertex(new Vertex("235"));
	g -> add_vertex(new Vertex("236"));
	g -> add_vertex(new Vertex("237"));
	g -> add_vertex(new Vertex("238"));
	g -> add_vertex(new Vertex("239"));
	g -> add_vertex(new Vertex("241"));
	g -> add_vertex(new Vertex("252"));
	g -> add_vertex(new Vertex("254"));
	g -> add_vertex(new Vertex("258"));
	g -> add_vertex(new Vertex("260"));
	g -> add_vertex(new Vertex("271"));
	g -> add_vertex(new Vertex("273"));
	g -> add_vertex(new Vertex("274"));
	g -> add_vertex(new Vertex("276"));
	g -> add_vertex(new Vertex("277"));
	g -> add_vertex(new Vertex("279"));
	g -> add_vertex(new Vertex("290"));
	g -> add_vertex(new Vertex("292"));
	g -> add_vertex(new Vertex("293"));
	g -> add_vertex(new Vertex("294"));
	g -> add_vertex(new Vertex("295"));
	g -> add_vertex(new Vertex("296"));
	g -> add_vertex(new Vertex("298"));
	g -> add_vertex(new Vertex("306"));
	g -> add_vertex(new Vertex("307"));
	g -> add_vertex(new Vertex("308"));
	g -> add_vertex(new Vertex("309"));
	g -> add_vertex(new Vertex("310"));
	g -> add_vertex(new Vertex("311"));
	g -> add_vertex(new Vertex("312"));
	g -> add_vertex(new Vertex("313"));
	g -> add_vertex(new Vertex("313"));
	g -> add_vertex(new Vertex("314"));
	g -> add_vertex(new Vertex("315"));
	g -> add_vertex(new Vertex("316"));
	g -> add_vertex(new Vertex("317"));
	g -> add_vertex(new Vertex("318"));
	g -> add_vertex(new Vertex("319"));
	g -> add_vertex(new Vertex("320"));
	g -> add_vertex(new Vertex("325"));
	g -> add_vertex(new Vertex("329"));
	g -> add_vertex(new Vertex("332"));
	g -> add_vertex(new Vertex("335"));
	g -> add_vertex(new Vertex("339"));
	g -> add_vertex(new Vertex("344"));
	g -> add_vertex(new Vertex("345"));
	g -> add_vertex(new Vertex("346"));
	g -> add_vertex(new Vertex("348"));
	g -> add_vertex(new Vertex("349"));
	g -> add_vertex(new Vertex("350"));
	g -> add_vertex(new Vertex("351"));
	g -> add_vertex(new Vertex("352"));
	g -> add_vertex(new Vertex("353"));
	g -> add_vertex(new Vertex("354"));
	g -> add_vertex(new Vertex("356"));
	g -> add_vertex(new Vertex("357"));
	g -> add_vertex(new Vertex("364"));
	g -> add_vertex(new Vertex("364"));
	g -> add_vertex(new Vertex("365"));
	g -> add_vertex(new Vertex("367"));
	g -> add_vertex(new Vertex("373"));
	g -> add_vertex(new Vertex("375"));
	g -> add_vertex(new Vertex("376"));
	g -> add_vertex(new Vertex("382"));
	g -> add_vertex(new Vertex("383"));
	g -> add_vertex(new Vertex("384"));
	g -> add_vertex(new Vertex("385"));
	g -> add_vertex(new Vertex("386"));
	g -> add_vertex(new Vertex("387"));
	g -> add_vertex(new Vertex("388"));
	g -> add_vertex(new Vertex("390"));
	g -> add_vertex(new Vertex("391"));
	g -> add_vertex(new Vertex("392"));
	g -> add_vertex(new Vertex("393"));
	g -> add_vertex(new Vertex("394"));
	g -> add_vertex(new Vertex("395"));
	g -> add_vertex(new Vertex("396"));
	g -> add_vertex(new Vertex("401"));
	g -> add_vertex(new Vertex("406"));
	g -> add_vertex(new Vertex("407"));
	g -> add_vertex(new Vertex("409"));
	g -> add_vertex(new Vertex("410"));
	g -> add_vertex(new Vertex("415"));
	g -> add_vertex(new Vertex("420"));
	g -> add_vertex(new Vertex("421"));
	g -> add_vertex(new Vertex("422"));
	g -> add_vertex(new Vertex("423"));
	g -> add_vertex(new Vertex("424"));
	g -> add_vertex(new Vertex("425"));
	g -> add_vertex(new Vertex("426"));
	g -> add_vertex(new Vertex("427"));
	g -> add_vertex(new Vertex("428"));
	g -> add_vertex(new Vertex("429"));
	g -> add_vertex(new Vertex("430"));
	g -> add_vertex(new Vertex("431"));
	g -> add_vertex(new Vertex("432"));
	g -> add_vertex(new Vertex("433"));

	g -> add_edge("40",  "41");
	g -> add_edge("40",  "59");
	g -> add_edge("41",  "42");
	g -> add_edge("42",  "43");
	g -> add_edge("43",  "44");
	g -> add_edge("43",  "62");
	g -> add_edge("44",  "45");
	g -> add_edge("45",  "46");
	g -> add_edge("46",  "65");
	g -> add_edge("48",  "49");
	g -> add_edge("48",  "67");
	g -> add_edge("49",  "50");
	g -> add_edge("50",  "51");
	g -> add_edge("51",  "52");
	g -> add_edge("51",  "70");
	g -> add_edge("52",  "53");
	g -> add_edge("53",  "54");
	g -> add_edge("54",  "73");
	g -> add_edge("59",  "78");
	g -> add_edge("62",  "81");
	g -> add_edge("65",  "84");
	g -> add_edge("67",  "86");
	g -> add_edge("70",  "89");
	g -> add_edge("73",  "92");
	g -> add_edge("78",  "79");
	g -> add_edge("78",  "97");
	g -> add_edge("79",  "80");
	g -> add_edge("80",  "81");
	g -> add_edge("81",  "82");
	g -> add_edge("81",  "100");
	g -> add_edge("82",  "83");
	g -> add_edge("83",  "84");
	g -> add_edge("83",  "102");
	g -> add_edge("84",  "85");
	g -> add_edge("85",  "86");
	g -> add_edge("86",  "87");
	g -> add_edge("87",  "88");
	g -> add_edge("87",  "106");
	g -> add_edge("88",  "89");
	g -> add_edge("89",  "90");
	g -> add_edge("89",  "108");
	g -> add_edge("90",  "91");
	g -> add_edge("91",  "92");
	g -> add_edge("92",  "111");
	g -> add_edge("97",  "116");
	g -> add_edge("100", "119");
	g -> add_edge("102", "121");
	g -> add_edge("106", "125");
	g -> add_edge("108", "127");
	g -> add_edge("111", "130");
	g -> add_edge("116", "117");
	g -> add_edge("117", "118");
	g -> add_edge("118", "119");
	g -> add_edge("119", "138");
	g -> add_edge("121", "122");
	g -> add_edge("122", "141");
	g -> add_edge("124", "125");
	g -> add_edge("124", "143");
	g -> add_edge("127", "128");
	g -> add_edge("127", "146");
	g -> add_edge("128", "129");
	g -> add_edge("129", "130");
	g -> add_edge("138", "157");
	g -> add_edge("141", "142");
	g -> add_edge("141", "160");
	g -> add_edge("142", "143");
	g -> add_edge("142", "161");
	g -> add_edge("143", "162");
	g -> add_edge("146", "165");
	g -> add_edge("157", "176");
	g -> add_edge("159", "160");
	g -> add_edge("159", "178");
	g -> add_edge("160", "161");
	g -> add_edge("161", "162");
	g -> add_edge("161", "180");
	g -> add_edge("162", "163");
	g -> add_edge("163", "182");
	g -> add_edge("165", "184");
	g -> add_edge("176", "195");
	g -> add_edge("178", "197");
	g -> add_edge("180", "199");
	g -> add_edge("182", "201");
	g -> add_edge("184", "203");
	g -> add_edge("195", "196");
	g -> add_edge("195", "214");
	g -> add_edge("196", "197");
	g -> add_edge("196", "215");
	g -> add_edge("197", "216");
	g -> add_edge("201", "202");
	g -> add_edge("201", "220");
	g -> add_edge("202", "203");
	g -> add_edge("202", "221");
	g -> add_edge("203", "222");
	g -> add_edge("211", "212");
	g -> add_edge("212", "213");
	g -> add_edge("213", "214");
	g -> add_edge("214", "215");
	g -> add_edge("214", "233");
	g -> add_edge("215", "216");
	g -> add_edge("216", "235");
	g -> add_edge("220", "221");
	g -> add_edge("220", "239");
	g -> add_edge("221", "222");
	g -> add_edge("222", "223");
	g -> add_edge("222", "241");
	g -> add_edge("223", "224");
	g -> add_edge("224", "225");
	g -> add_edge("233", "252");
	g -> add_edge("235", "236");
	g -> add_edge("235", "254");
	g -> add_edge("236", "237");
	g -> add_edge("237", "238");
	g -> add_edge("238", "239");
	g -> add_edge("239", "258");
	g -> add_edge("241", "260");
	g -> add_edge("252", "271");
	g -> add_edge("254", "273");
	g -> add_edge("258", "277");
	g -> add_edge("260", "279");
	g -> add_edge("271", "290");
	g -> add_edge("273", "274");
	g -> add_edge("273", "292");
	g -> add_edge("274", "293");
	g -> add_edge("276", "277");
	g -> add_edge("276", "295");
	g -> add_edge("277", "296");
	g -> add_edge("279", "298");
	g -> add_edge("290", "309");
	g -> add_edge("292", "293");
	g -> add_edge("292", "311");
	g -> add_edge("293", "294");
	g -> add_edge("293", "312");
	g -> add_edge("294", "295");
	g -> add_edge("294", "313");
	g -> add_edge("295", "296");
	g -> add_edge("295", "314");
	g -> add_edge("296", "315");
	g -> add_edge("298", "317");
	g -> add_edge("306", "307");
	g -> add_edge("306", "325");
	g -> add_edge("307", "308");
	g -> add_edge("308", "309");
	g -> add_edge("309", "310");
	g -> add_edge("310", "311");
	g -> add_edge("310", "329");
	g -> add_edge("311", "312");
	g -> add_edge("312", "313");
	g -> add_edge("313", "314");
	g -> add_edge("313", "332");
	g -> add_edge("314", "315");
	g -> add_edge("315", "316");
	g -> add_edge("316", "317");
	g -> add_edge("316", "335");
	g -> add_edge("317", "318");
	g -> add_edge("318", "319");
	g -> add_edge("319", "320");
	g -> add_edge("320", "339");
	g -> add_edge("325", "344");
	g -> add_edge("329", "348");
	g -> add_edge("332", "351");
	g -> add_edge("335", "354");
	g -> add_edge("339", "358");
	g -> add_edge("344", "345");
	g -> add_edge("345", "346");
	g -> add_edge("345", "364");
	g -> add_edge("346", "365");
	g -> add_edge("348", "349");
	g -> add_edge("348", "367");
	g -> add_edge("349", "350");
	g -> add_edge("350", "351");
	g -> add_edge("351", "352");
	g -> add_edge("352", "353");
	g -> add_edge("353", "354");
	g -> add_edge("354", "373");
	g -> add_edge("356", "357");
	g -> add_edge("356", "375");
	g -> add_edge("357", "358");
	g -> add_edge("357", "376");
	g -> add_edge("364", "365");
	g -> add_edge("364", "383");
	g -> add_edge("365", "384");
	g -> add_edge("367", "386");
	g -> add_edge("373", "392");
	g -> add_edge("375", "376");
	g -> add_edge("375", "394");
	g -> add_edge("376", "395");
	g -> add_edge("382", "383");
	g -> add_edge("382", "401");
	g -> add_edge("383", "384");
	g -> add_edge("384", "385");
	g -> add_edge("385", "386");
	g -> add_edge("386", "387");
	g -> add_edge("387", "388");
	g -> add_edge("387", "406");
	g -> add_edge("388", "407");
	g -> add_edge("390", "391");
	g -> add_edge("390", "409");
	g -> add_edge("391", "392");
	g -> add_edge("391", "410");
	g -> add_edge("392", "393");
	g -> add_edge("393", "394");
	g -> add_edge("394", "395");
	g -> add_edge("395", "396");
	g -> add_edge("396", "415");
	g -> add_edge("401", "420");
	g -> add_edge("406", "407");
	g -> add_edge("406", "425");
	g -> add_edge("407", "426");
	g -> add_edge("409", "410");
	g -> add_edge("409", "428");
	g -> add_edge("410", "429");
	g -> add_edge("415", "434");
	g -> add_edge("420", "421");
	g -> add_edge("421", "422");
	g -> add_edge("422", "423");
	g -> add_edge("423", "424");
	g -> add_edge("424", "425");
	g -> add_edge("425", "426");
	g -> add_edge("426", "427");
	g -> add_edge("427", "428");
	g -> add_edge("428", "429");
	g -> add_edge("429", "430");
	g -> add_edge("430", "431");
	g -> add_edge("431", "432");
	g -> add_edge("432", "433");
	//g -> add_edge("433", "434");

/*

Graph *g = new Graph();

	g -> add_vertex(new Vertex("A"));
	g -> add_vertex(new Vertex("B"));
	g -> add_vertex(new Vertex("C"));
	g -> add_vertex(new Vertex("D"));
	g -> add_vertex(new Vertex("E"));
	g -> add_vertex(new Vertex("F"));
	g -> add_vertex(new Vertex("G"));
	g -> add_vertex(new Vertex("H"));
	g -> add_vertex(new Vertex("I"));
	g -> add_vertex(new Vertex("J"));
	g -> add_vertex(new Vertex("K"));

	g -> add_edge("E","A");
	g -> add_edge("A","B");
	g -> add_edge("B","C");
	g -> add_edge("F","B");
	g -> add_edge("E","I");
	g -> add_edge("I","F");
	g -> add_edge("F","G");
	g -> add_edge("G","J");
	g -> add_edge("K","G");
	g -> add_edge("H","D");
	g -> add_edge("K","H");
*/
	/*Grafo antes de goTo*/
	g -> print();
	std::cout << "=========================" << std::endl;

	/*Ejemplo de uso de goTo*/

	/*La usamos*/
	Stack<std::string> *pila = g ->goTo2("40","433");

	/*Grafo despues de goTo*/
	g -> print();

	/*Utilizamos la pila*/

	while(!pila ->IsEmpty()){
		std::cout << "Pila: " << pila ->Pop() << std::endl;
	}

	/*Liberamos memoria*/
	delete pila;
	delete g;
#endif
}